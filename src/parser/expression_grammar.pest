// `pest` will skip WHITESPACE between tokens by default if it's defined with `_`
WHITESPACE = _{ " " }

// Basic Terminals
identifier = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
integer    = @{ ASCII_DIGIT+ }

// Basic string literals, does not handle escape sequences for simplicity here.
// String literals are for literal values
string_literal = @{ "\'" ~ (!"\'" ~ ANY)* ~ "\'" }
// Quoted names are for function names or other identifiers that need to be quoted
quoted_name = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }

// A name of a function or table can either be an unquoted identifier or a quoted string
name = _{ identifier | quoted_name }

// Expression Components
// Field reference
reference = _{ "$" ~ integer }
// Literal
literal = _{ integer | string_literal }

parameters = _{ "<" ~ name ~ ("," ~ WHITESPACE* ~ name)* ~ ">" }
variant    = _{ "[" ~ name ~ "]" }
anchor     = _{ "#" ~ integer }
uri_anchor = _{ "@" ~ integer }

argument_list = _{ "(" ~ (expression ~ ("," ~ WHITESPACE* ~ expression)*)? ~ ")" }

function_call = {
    name ~ WHITESPACE* ~  // Function name
  parameters? ~ WHITESPACE* ~ variant? ~ WHITESPACE* ~ anchor? ~ WHITESPACE* ~ uri_anchor? ~ WHITESPACE* ~ argument_list // Arguments `()` are required
}

// Top-level Expression Rule
// Order matters for PEGs: Since an identifer can be a function call, we put that first.
expression = _{ function_call | reference | literal }

// A rule for matching an entire input as an expression
expression_complete = _{ SOI ~ expression ~ EOI }
